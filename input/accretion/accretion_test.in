 Adapt {
     max_level = 0;
     min_level = 0;
 }

 Boundary {
     type = "periodic";
 }


Domain {
     lower = [ -2.00, -2.00, -2.00];
     rank = 3;
     upper = [ 2.00, 2.00, 2.00 ];
 }

 Field {
     alignment = 8;
     gamma = 1.6666667;
     ghost_depth = 4;
     courant = 0.3;
     history = 1;
     list = [ "density", "velocity_x", "velocity_y", "velocity_z",
     	      "acceleration_x","acceleration_y","acceleration_z",
	      "total_energy", "internal_energy", "pressure",
	      "density_accreted","density_accreted_accumulate"];
     padding = 0;
     dual_energy = true;
     diffusion = true;
 }

 Initial {
     accretion_test {
     	 star_mass = 1.0;
	 star_position = [-0.5,-0.5,-0.5];
	 star_velocity = [1.0,1.0,0.0];
	 gas_density = 1.0;
	 gas_pressure = 1.0;
     };
    list = [ "accretion_test" ];
 }

 Mesh {
     root_blocks = [ 4, 4, 4 ];
     root_rank = 3;
     root_size = [64, 64, 64];
 }


Particle {
    list = ["star"];
    batch_size = 4096;
    star {
        attributes = [ "x", "default",
                       "y", "default",
                       "z", "default",
                       "vx", "default",
                       "vy", "default",
                       "vz", "default",
                       "ax", "default",
                       "ay", "default",
                       "az", "default",
                       "mass", "default",
		       "lifetime" , "default",
		       "creation_time", "default",
		       "metal_fraction", "default",
		       "is_copy", "int64",
		       "id" , "int64"];
        position = [ "x", "y", "z" ];
        velocity = [ "vx", "vy", "vz" ];
        group_list = "is_gravitating";
    }
}

Method {

    list = ["mhd_vlct","pm_update","merge_stars",
    	    "accretion_compute","accretion_remove_gas"];

    mhd_vlct {
      	    courant = 0.3;
            mhd_choice = "no_bfield";	
      	    density_floor = 1.0e-6;	
	    pressure_floor = 1.0e-6;
	    riemann_solver = "hllc";
      };

    pm_update {
        max_dt = 1.0e-2;
    };
    
    accretion_compute {
    	flavor = "density_threshold";
	density_threshold = 1.0e-6;
    }
}

Stopping {
    time = 1.0;
}

Output {
   
    data {
        dir = [ "./Dir_Accretion_%04d", "cycle" ];
        field_list = ["density", "velocity_x", "velocity_y", "velocity_z"];
	particle_list = ["star"];
        name = [ "data-%04d-%04d.h5", "cycle", "proc" ];
        schedule {
            step = 10;
            var = "cycle";
        };
        type = "data";
    };
    
    list = ["data"];
     
}
